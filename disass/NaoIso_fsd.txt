using <CppImplementationDetails>;
using Microsoft.VisualC;
using System;
using System.ComponentModel;
using System.Drawing;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Permissions;
using System.Windows.Forms;
[assembly: AssemblyVersion("1.0.3509.39851")]
[assembly: CLSCompliant(true)]
[assembly: AssemblyCompany("Muy poca")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCopyright("Copyright (c) Muy poca 2008")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyProduct("NaoIso")]
[assembly: AssemblyTitle("NaoIso")]
[assembly: AssemblyTrademark("")]
[assembly: ComVisible(false)]
[assembly: SecurityPermission(SecurityAction.RequestMinimum, UnmanagedCode = true)]
[assembly: SecurityPermission(SecurityAction.RequestMinimum, SkipVerification = true)]
namespace vc_attributes
{
	[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
	internal enum YesNoMaybe
	{

	}
	[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
	internal enum AccessType
	{

	}
}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _EXCEPTION_DISPOSITION
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _SID_NAME_USE
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _ACL_INFORMATION_CLASS
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _AUDIT_EVENT_TYPE
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _SECURITY_IMPERSONATION_LEVEL
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _TOKEN_TYPE
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _TOKEN_ELEVATION_TYPE
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _TOKEN_INFORMATION_CLASS
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _MANDATORY_LEVEL
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _PS_RATE_PHASE
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _JOBOBJECTINFOCLASS
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _LOGICAL_PROCESSOR_RELATIONSHIP
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _PROCESSOR_CACHE_TYPE
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _SYSTEM_POWER_STATE
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _DEVICE_POWER_STATE
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum IMAGE_AUX_SYMBOL_TYPE
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum IMPORT_OBJECT_TYPE
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum IMPORT_OBJECT_NAME_TYPE
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum ReplacesCorHdrNumericDefines
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _HEAP_INFORMATION_CLASS
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _ACTIVATION_CONTEXT_INFO_CLASS
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _CM_SERVICE_NODE_TYPE
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _CM_SERVICE_LOAD_TYPE
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _CM_ERROR_CONTROL_TYPE
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _TAPE_DRIVE_PROBLEM_TYPE
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _TRANSACTION_OUTCOME
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _TRANSACTION_STATE
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _TRANSACTION_INFORMATION_CLASS
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _TRANSACTIONMANAGER_INFORMATION_CLASS
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _RESOURCEMANAGER_INFORMATION_CLASS
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _ENLISTMENT_INFORMATION_CLASS
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _KTMOBJECT_TYPE
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _MEMORY_RESOURCE_NOTIFICATION_TYPE
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _PROC_THREAD_ATTRIBUTE_NUM
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _GET_FILEEX_INFO_LEVELS
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _FINDEX_INFO_LEVELS
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _FINDEX_SEARCH_OPS
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _STREAM_INFO_LEVELS
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _COMPUTER_NAME_FORMAT
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum SYSNLS_FUNCTION
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum SYSGEOTYPE
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum SYSGEOCLASS
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _SC_ACTION_TYPE
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _SC_STATUS_TYPE
{

}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
internal enum _SC_ENUM_TYPE
{

}
namespace <CppImplementationDetails>
{
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
	[StructLayout(LayoutKind.Sequential, Size = 18)]
	internal struct ??_C@_1BC@EKMDCNOB@?$AAK?$AAE?$AAR?$AAN?$AAE?$AAL?$AA3?$AA2?$AA?$AA@$$BY0A@$$CB_W
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
	[StructLayout(LayoutKind.Sequential, Size = 14)]
	internal struct ??_C@_0O@JKAFBCMB@CreateActCtxW?$AA@$$BY0A@$$CBD
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
	[StructLayout(LayoutKind.Sequential, Size = 4)]
	internal struct $ArrayType$$$BY00Q6MPBXXZ
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
	[StructLayout(LayoutKind.Sequential, Size = 16)]
	internal struct ??_C@_0BA@NOJDBDJO@?4?$DPAVtype_info?$EA?$EA?$AA@$$BY0A@$$CBD
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
	[StructLayout(LayoutKind.Sequential, Size = 8)]
	internal struct $ArrayType$$$BY01Q6MXXZ
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
	[StructLayout(LayoutKind.Sequential, Size = 1024)]
	internal struct $ArrayType$$$BY0BAA@K
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
	[StructLayout(LayoutKind.Sequential, Size = 36)]
	internal struct $ArrayType$$$BY0CE@$$CBD
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
	[StructLayout(LayoutKind.Sequential, Size = 29)]
	internal struct $ArrayType$$$BY0BN@$$CBD
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
	[StructLayout(LayoutKind.Sequential, Size = 24)]
	internal struct $ArrayType$$$BY0BI@$$CBD
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
	[StructLayout(LayoutKind.Sequential, Size = 30)]
	internal struct $ArrayType$$$BY0BO@$$CBD
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
	[StructLayout(LayoutKind.Sequential, Size = 4)]
	internal struct $ArrayType$$$BY03$$CBD
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
	[StructLayout(LayoutKind.Sequential, Size = 5)]
	internal struct $ArrayType$$$BY04$$CBD
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
	[StructLayout(LayoutKind.Sequential, Size = 256)]
	internal struct $ArrayType$$$BY0EA@I
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
	[StructLayout(LayoutKind.Sequential, Size = 16)]
	internal struct $ArrayType$$$BY0BA@E
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
	[StructLayout(LayoutKind.Sequential, Size = 64)]
	internal struct leftkey_swap$$BY0A@I
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
	[StructLayout(LayoutKind.Sequential, Size = 256)]
	internal struct $ArrayType$$$BY00U_des_ctx@@
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
	[StructLayout(LayoutKind.Sequential, Size = 64)]
	internal struct rightkey_swap$$BY0A@I
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
	[StructLayout(LayoutKind.Sequential, Size = 8)]
	internal struct $ArrayType$$$BY07E
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
	[StructLayout(LayoutKind.Sequential, Size = 768)]
	internal struct $ArrayType$$$BY00U_tripledes_ctx@@
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
	[StructLayout(LayoutKind.Sequential, Size = 512)]
	internal struct $ArrayType$$$BY1EA@7E
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
	[StructLayout(LayoutKind.Sequential, Size = 3)]
	internal struct ??_C@_02JDPG@rb?$AA@$$BY0A@$$CBD
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
	[StructLayout(LayoutKind.Sequential, Size = 8)]
	internal struct ??_C@_07NKOFPJFH@?$ABCD001?$AB?$AA@$$BY0A@$$CBD
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
	[StructLayout(LayoutKind.Sequential, Size = 5)]
	internal struct ??_C@_04GKHLBAIJ@?4bin?$AA@$$BY0A@$$CBD
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
	[StructLayout(LayoutKind.Sequential, Size = 5)]
	internal struct ??_C@_04GHIANNPF@?4BIN?$AA@$$BY0A@$$CBD
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
	[StructLayout(LayoutKind.Sequential, Size = 4)]
	internal struct ??_C@_03ELIABIOC@w?$CLb?$AA@$$BY0A@$$CBD
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
	[StructLayout(LayoutKind.Sequential, Size = 4)]
	internal struct ??_C@_03IKGEINEE@?$CFs?5?$AA@$$BY0A@$$CBD
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
	[StructLayout(LayoutKind.Sequential, Size = 5)]
	internal struct ??_C@_04EPBFEBBF@?$CFX?9?$DO?$AA@$$BY0A@$$CBD
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
	[StructLayout(LayoutKind.Sequential, Size = 4)]
	internal struct ??_C@_03NBBHOIGN@?$CFX?6?$AA@$$BY0A@$$CBD
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
	[StructLayout(LayoutKind.Sequential, Size = 9)]
	internal struct ??_C@_08IKLPECHA@Skipped?6?$AA@$$BY0A@$$CBD
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
	[StructLayout(LayoutKind.Sequential, Size = 3)]
	internal struct ??_C@_02EMFKHFLK@?$CFX?$AA@$$BY0A@$$CBD
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
	[StructLayout(LayoutKind.Sequential, Size = 3)]
	internal struct $ArrayType$$$BY02D
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
	[StructLayout(LayoutKind.Sequential, Size = 65536)]
	internal struct $ArrayType$$$BY0BAAAA@E
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
	[StructLayout(LayoutKind.Sequential, Size = 256)]
	internal struct $ArrayType$$$BY0BAA@D
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
	[StructLayout(LayoutKind.Sequential, Size = 12)]
	internal struct $ArrayType$$$BY0M@$$CBE
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
	[StructLayout(LayoutKind.Sequential, Size = 2048)]
	internal struct $ArrayType$$$BY0IAA@E
	{
	}
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
[StructLayout(LayoutKind.Sequential, Size = 16)]
internal struct _GUID
{
}
namespace <CrtImplementationDetails>
{
	[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
	[StructLayout(LayoutKind.Sequential, Size = 12)]
	internal struct ActivationContext
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
	[StructLayout(LayoutKind.Sequential, Size = 4)]
	internal struct LanguageSupport
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
	[StructLayout(LayoutKind.Sequential, Size = 1)]
	internal struct Progress
	{
		[DebugInfoInPDB, MiscellaneousBits(64), CLSCompliant(false), NativeCppClass]
		public enum State
		{

		}
	}
	[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
	[StructLayout(LayoutKind.Sequential, Size = 1)]
	internal struct AtExitLock
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
	[StructLayout(LayoutKind.Sequential, Size = 1)]
	internal struct ThisModule
	{
	}
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
[StructLayout(LayoutKind.Sequential, Size = 4)]
internal struct gcroot<System::String ^>
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
[StructLayout(LayoutKind.Sequential, Size = 4)]
internal struct HINSTANCE__
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
[StructLayout(LayoutKind.Sequential, Size = 28)]
internal struct tagMSG
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
[StructLayout(LayoutKind.Sequential, Size = 4)]
internal struct HWND__
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
[StructLayout(LayoutKind.Sequential, Size = 32)]
internal struct tagACTCTXW
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
[StructLayout(LayoutKind.Sequential, Size = 36)]
internal struct tm
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
[StructLayout(LayoutKind.Sequential, Size = 4)]
internal struct HDC__
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
[StructLayout(LayoutKind.Sequential, Size = 16)]
internal struct tagRECT
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
[StructLayout(LayoutKind.Sequential, Size = 12)]
internal struct _SECURITY_ATTRIBUTES
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
[StructLayout(LayoutKind.Sequential, Size = 32)]
internal struct _TP_CALLBACK_ENVIRON
{
	[DebugInfoInPDB, MiscellaneousBits(66), CLSCompliant(false), NativeCppClass]
	[StructLayout(LayoutKind.Explicit, Size = 4)]
	public struct <unnamed-type-u>
	{
		[DebugInfoInPDB, MiscellaneousBits(65), CLSCompliant(false), NativeCppClass]
		[StructLayout(LayoutKind.Sequential, Size = 4)]
		public struct <unnamed-type-s>
		{
		}
	}
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
[StructLayout(LayoutKind.Sequential, Size = 56)]
internal struct tagTEXTMETRICA
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
[StructLayout(LayoutKind.Sequential, Size = 8)]
internal struct _ldiv_t
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
[StructLayout(LayoutKind.Sequential, Size = 8)]
internal struct localeinfo_struct
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
[StructLayout(LayoutKind.Sequential, Size = 32)]
internal struct EHExceptionRecord
{
	[DebugInfoInPDB, MiscellaneousBits(65), CLSCompliant(false), NativeCppClass]
	[StructLayout(LayoutKind.Sequential, Size = 12)]
	public struct EHParameters
	{
	}
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
[StructLayout(LayoutKind.Sequential, Size = 16)]
internal struct _s_HandlerType
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
[StructLayout(LayoutKind.Sequential, Size = 28)]
internal struct _s_CatchableType
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
[StructLayout(LayoutKind.Sequential, Size = 16)]
internal struct _s_ThrowInfo
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
[StructLayout(LayoutKind.Sequential, Size = 12)]
internal struct PMD
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
[StructLayout(LayoutKind.Sequential, Size = 716)]
internal struct _CONTEXT
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
[StructLayout(LayoutKind.Sequential, Size = 8)]
internal struct FrameInfo
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
[StructLayout(LayoutKind.Sequential, Size = 532)]
internal struct _tiddata
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
[StructLayout(LayoutKind.Sequential, Size = 8)]
internal struct _EXCEPTION_POINTERS
{
}
namespace std
{
	[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
	internal enum _Uninitialized
	{

	}
	[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
	[StructLayout(LayoutKind.Sequential, Size = 4)]
	internal struct _Mutex
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
	[StructLayout(LayoutKind.Sequential, Size = 4)]
	internal struct _Lockit
	{
	}
	[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass]
	[StructLayout(LayoutKind.Sequential, Size = 1)]
	internal struct _Init_locks
	{
	}
}
[DebugInfoInPDB, MiscellaneousBits(64), NativeCppClass, UnsafeValueType]
[StructLayout(LayoutKind.Sequential, Size = 12)]
internal struct type_info
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
[StructLayout(LayoutKind.Sequential, Size = 8)]
internal struct __type_info_node
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
[StructLayout(LayoutKind.Sequential, Size = 5)]
internal struct $_s__RTTIBaseClassArray$_extraBytes_4
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
[StructLayout(LayoutKind.Sequential, Size = 20)]
internal struct _s__RTTICompleteObjectLocator
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
[StructLayout(LayoutKind.Sequential, Size = 16)]
internal struct _s__RTTIClassHierarchyDescriptor
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
[StructLayout(LayoutKind.Sequential, Size = 24)]
internal struct $_TypeDescriptor$_extraBytes_16
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
[StructLayout(LayoutKind.Sequential, Size = 28)]
internal struct _s__RTTIBaseClassDescriptor2
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
[StructLayout(LayoutKind.Sequential, Size = 256)]
internal struct _des_ctx
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
[StructLayout(LayoutKind.Sequential, Size = 768)]
internal struct _tripledes_ctx
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass]
[StructLayout(LayoutKind.Sequential, Size = 32)]
internal struct _iobuf
{
}
namespace NaoIso
{
	public class Form1 : Form
	{
		private GroupBox groupBox1;
		private TextBox textBox1;
		private Label label1;
		private TextBox textBox5;
		private Label label5;
		private TextBox textBox2;
		private Label label2;
		private Button button1;
		private TextBox textBox3;
		private GroupBox groupBox2;
		private TextBox textBox6;
		private Label label6;
		private Label label3;
		private TextBox textBox4;
		private Label label4;
		private Button button3;
		private ProgressBar progressBar1;
		private OpenFileDialog srcISODialog;
		private Container components;
		private uint offset;
		private uint start;
		private uint sz;
		private uint csz;
		private uint crc;
		public Form1()
		{
			try
			{
				this.InitializeComponent();
				this.offset = 192512u;
				this.start = 47104u;
			}
			catch
			{
				base.Dispose(true);
				throw;
			}
		}
		private void ~Form1()
		{
			if (this.components != null)
			{
				IDisposable disposable = this.components;
				if (disposable != null)
				{
					disposable.Dispose();
				}
			}
		}
		private void InitializeComponent()
		{
			this.groupBox1 = new GroupBox();
			this.textBox5 = new TextBox();
			this.label5 = new Label();
			this.textBox2 = new TextBox();
			this.label2 = new Label();
			this.button1 = new Button();
			this.textBox1 = new TextBox();
			this.label1 = new Label();
			this.textBox3 = new TextBox();
			this.groupBox2 = new GroupBox();
			this.textBox6 = new TextBox();
			this.label6 = new Label();
			this.label3 = new Label();
			this.textBox4 = new TextBox();
			this.label4 = new Label();
			this.button3 = new Button();
			this.progressBar1 = new ProgressBar();
			this.srcISODialog = new OpenFileDialog();
			this.groupBox1.SuspendLayout();
			this.groupBox2.SuspendLayout();
			base.SuspendLayout();
			this.groupBox1.Controls.Add(this.textBox5);
			this.groupBox1.Controls.Add(this.label5);
			this.groupBox1.Controls.Add(this.textBox2);
			this.groupBox1.Controls.Add(this.label2);
			this.groupBox1.Controls.Add(this.button1);
			this.groupBox1.Controls.Add(this.textBox1);
			this.groupBox1.Controls.Add(this.label1);
			Point location = new Point(18, 12);
			this.groupBox1.Location = location;
			this.groupBox1.Name = "groupBox1";
			Size size = new Size(299, 180);
			this.groupBox1.Size = size;
			this.groupBox1.TabIndex = 0;
			this.groupBox1.TabStop = false;
			this.groupBox1.Text = "Source Game";
			Color white = Color.White;
			this.textBox5.BackColor = white;
			Point location2 = new Point(6, 134);
			this.textBox5.Location = location2;
			this.textBox5.Name = "textBox5";
			this.textBox5.ReadOnly = true;
			Size size2 = new Size(202, 20);
			this.textBox5.Size = size2;
			this.textBox5.TabIndex = 6;
			this.label5.AutoSize = true;
			Point location3 = new Point(3, 118);
			this.label5.Location = location3;
			this.label5.Name = "label5";
			Size size3 = new Size(106, 13);
			this.label5.Size = size3;
			this.label5.TabIndex = 5;
			this.label5.Text = "Source game info file";
			Point location4 = new Point(6, 95);
			this.textBox2.Location = location4;
			this.textBox2.Name = "textBox2";
			Size size4 = new Size(202, 20);
			this.textBox2.Size = size4;
			this.textBox2.TabIndex = 4;
			this.label2.AutoSize = true;
			Point location5 = new Point(6, 79);
			this.label2.Location = location5;
			this.label2.Name = "label2";
			Size size5 = new Size(62, 13);
			this.label2.Size = size5;
			this.label2.TabIndex = 3;
			this.label2.Text = "Source Key";
			Point location6 = new Point(268, 41);
			this.button1.Location = location6;
			this.button1.Name = "button1";
			Size size6 = new Size(28, 23);
			this.button1.Size = size6;
			this.button1.TabIndex = 2;
			this.button1.Text = "...";
			this.button1.UseVisualStyleBackColor = true;
			this.button1.Click += new EventHandler(this.button1_Click);
			Color white2 = Color.White;
			this.textBox1.BackColor = white2;
			Point location7 = new Point(6, 43);
			this.textBox1.Location = location7;
			this.textBox1.Name = "textBox1";
			this.textBox1.ReadOnly = true;
			Size size7 = new Size(256, 20);
			this.textBox1.Size = size7;
			this.textBox1.TabIndex = 1;
			this.label1.AutoSize = true;
			Point location8 = new Point(6, 27);
			this.label1.Location = location8;
			this.label1.Name = "label1";
			Size size8 = new Size(107, 13);
			this.label1.Size = size8;
			this.label1.TabIndex = 0;
			this.label1.Text = "GD Track ISO Image";
			Point location9 = new Point(6, 95);
			this.textBox3.Location = location9;
			this.textBox3.Name = "textBox3";
			Size size9 = new Size(202, 20);
			this.textBox3.Size = size9;
			this.textBox3.TabIndex = 4;
			this.groupBox2.Controls.Add(this.textBox6);
			this.groupBox2.Controls.Add(this.label6);
			this.groupBox2.Controls.Add(this.textBox3);
			this.groupBox2.Controls.Add(this.label3);
			this.groupBox2.Controls.Add(this.textBox4);
			this.groupBox2.Controls.Add(this.label4);
			Point location10 = new Point(323, 12);
			this.groupBox2.Location = location10;
			this.groupBox2.Name = "groupBox2";
			Size size10 = new Size(299, 180);
			this.groupBox2.Size = size10;
			this.groupBox2.TabIndex = 1;
			this.groupBox2.TabStop = false;
			this.groupBox2.Text = "Destination Game";
			Point location11 = new Point(6, 134);
			this.textBox6.Location = location11;
			this.textBox6.Name = "textBox6";
			Size size11 = new Size(202, 20);
			this.textBox6.Size = size11;
			this.textBox6.TabIndex = 8;
			this.label6.AutoSize = true;
			Point location12 = new Point(3, 118);
			this.label6.Location = location12;
			this.label6.Name = "label6";
			Size size12 = new Size(125, 13);
			this.label6.Size = size12;
			this.label6.TabIndex = 7;
			this.label6.Text = "Destination game info file";
			this.label3.AutoSize = true;
			Point location13 = new Point(6, 79);
			this.label3.Location = location13;
			this.label3.Name = "label3";
			Size size13 = new Size(81, 13);
			this.label3.Size = size13;
			this.label3.TabIndex = 3;
			this.label3.Text = "Destination Key";
			Point location14 = new Point(6, 43);
			this.textBox4.Location = location14;
			this.textBox4.Name = "textBox4";
			Size size14 = new Size(287, 20);
			this.textBox4.Size = size14;
			this.textBox4.TabIndex = 1;
			this.label4.AutoSize = true;
			Point location15 = new Point(6, 27);
			this.label4.Location = location15;
			this.label4.Name = "label4";
			Size size15 = new Size(81, 13);
			this.label4.Size = size15;
			this.label4.TabIndex = 0;
			this.label4.Text = "Destination ISO";
			Point location16 = new Point(271, 204);
			this.button3.Location = location16;
			this.button3.Name = "button3";
			Size size16 = new Size(96, 26);
			this.button3.Size = size16;
			this.button3.TabIndex = 2;
			this.button3.Text = "Start";
			this.button3.UseVisualStyleBackColor = true;
			this.button3.Click += new EventHandler(this.button3_Click);
			Point location17 = new Point(18, 238);
			this.progressBar1.Location = location17;
			this.progressBar1.Name = "progressBar1";
			Size size17 = new Size(600, 19);
			this.progressBar1.Size = size17;
			this.progressBar1.TabIndex = 3;
			this.srcISODialog.Filter = "ISO Files|*.iso";
			this.srcISODialog.Title = "Select ISO Image";
			SizeF autoScaleDimensions = new SizeF(6f, 13f);
			base.AutoScaleDimensions = autoScaleDimensions;
			base.AutoScaleMode = AutoScaleMode.Font;
			Color white3 = Color.White;
			this.BackColor = white3;
			Size clientSize = new Size(642, 271);
			base.ClientSize = clientSize;
			base.Controls.Add(this.progressBar1);
			base.Controls.Add(this.button3);
			base.Controls.Add(this.groupBox2);
			base.Controls.Add(this.groupBox1);
			base.FormBorderStyle = FormBorderStyle.FixedDialog;
			base.MaximizeBox = false;
			base.MinimizeBox = false;
			base.Name = "Form1";
			this.Text = "Naomi GD ISO Converter";
			this.groupBox1.ResumeLayout(false);
			this.groupBox1.PerformLayout();
			this.groupBox2.ResumeLayout(false);
			this.groupBox2.PerformLayout();
			base.ResumeLayout(false);
		}
		private unsafe void button1_Click(object sender, EventArgs e)
		{
			if (this.srcISODialog.ShowDialog() == DialogResult.OK)
			{
				this.textBox1.Text = this.srcISODialog.FileName;
				this.textBox4.Text = this.srcISODialog.FileName + ".new";
				IntPtr hglobal = Marshal.StringToHGlobalAnsi(this.textBox1.Text);
				_iobuf* ptr;
				<Module>.fopen_s(&ptr, (sbyte*)hglobal.ToPointer(), (sbyte*)(&<Module>.??_C@_02JDPG@rb?$AA@));
				Marshal.FreeHGlobal(hglobal);
				if (ptr == null)
				{
					<Module>.fclose(ptr);
					MessageBox.Show("Can't open ISO image", "Error", MessageBoxButtons.OK);
				}
				else
				{
					$ArrayType$$$BY0M@$$CBE $ArrayType$$$BY0M@$$CBE = 0;
					*(ref $ArrayType$$$BY0M@$$CBE + 1) = 255;
					*(ref $ArrayType$$$BY0M@$$CBE + 2) = 255;
					*(ref $ArrayType$$$BY0M@$$CBE + 3) = 255;
					*(ref $ArrayType$$$BY0M@$$CBE + 4) = 255;
					*(ref $ArrayType$$$BY0M@$$CBE + 5) = 255;
					*(ref $ArrayType$$$BY0M@$$CBE + 6) = 255;
					*(ref $ArrayType$$$BY0M@$$CBE + 7) = 255;
					*(ref $ArrayType$$$BY0M@$$CBE + 8) = 255;
					*(ref $ArrayType$$$BY0M@$$CBE + 9) = 255;
					*(ref $ArrayType$$$BY0M@$$CBE + 10) = 255;
					*(ref $ArrayType$$$BY0M@$$CBE + 11) = 0;
					uint num = 2048u;
					$ArrayType$$$BY0IAA@E $ArrayType$$$BY0IAA@E;
					<Module>.fread((void*)(&$ArrayType$$$BY0IAA@E), 12u, 1u, ptr);
					if (<Module>.memcmp((void*)(&$ArrayType$$$BY0IAA@E), (void*)(&$ArrayType$$$BY0M@$$CBE), 12u) == null)
					{
						num = 2352u;
						<Module>.fseek(ptr, 16, 0);
					}
					else
					{
						<Module>.fseek(ptr, 0, 0);
					}
					int i;
					for (i = 16; i < 200; i++)
					{
						if (num == 2352u)
						{
							<Module>.fseek(ptr, i * 2352 + 16, 0);
						}
						else
						{
							<Module>.fseek(ptr, i * 2048, 0);
						}
						<Module>.fread((void*)(&$ArrayType$$$BY0IAA@E), 2048u, 1u, ptr);
						if (<Module>.memcmp((void*)(&$ArrayType$$$BY0IAA@E), (void*)(&<Module>.??_C@_07NKOFPJFH@?$ABCD001?$AB?$AA@), 7u) == null)
						{
							break;
						}
					}
					if (i == 200)
					{
						<Module>.fclose(ptr);
						MessageBox.Show("Can't find ISO header", "Error", MessageBoxButtons.OK);
					}
					else
					{
						_iso_primary_record iso_primary_record;
						<Module>.memcpy((void*)(&iso_primary_record), (void*)(&$ArrayType$$$BY0IAA@E), 2048u);
						_rootdirrecord rootdirrecord;
						<Module>.memcpy((void*)(&rootdirrecord), ref iso_primary_record + 156, 33u);
						i = *(ref rootdirrecord + 2) - 45000;
						if (num == 2352u)
						{
							<Module>.fseek(ptr, i * 2352 + 16, 0);
						}
						else
						{
							<Module>.fseek(ptr, i * 2048, 0);
						}
						<Module>.fread((void*)(&$ArrayType$$$BY0IAA@E), 2048u, 1u, ptr);
						byte* ptr2 = (byte*)(&$ArrayType$$$BY0IAA@E);
						this.sz = 0u;
						bool flag = false;
						while (true)
						{
							_rootdirrecord* ptr3 = (_rootdirrecord*)ptr2;
							if (!(*(bool*)ptr3))
							{
								break;
							}
							$ArrayType$$$BY0BAA@D $ArrayType$$$BY0BAA@D;
							<Module>.memcpy((void*)(&$ArrayType$$$BY0BAA@D), (void*)(ptr2 + 33 / 1), (uint)(*(byte*)(ptr3 + 32 / sizeof(_rootdirrecord))));
							*(ref $ArrayType$$$BY0BAA@D + *(byte*)(ptr3 + 32 / sizeof(_rootdirrecord))) = 0;
							this.sz += *(uint*)(ptr3 + 10 / sizeof(_rootdirrecord));
							if ((<Module>.strstr((sbyte*)(&$ArrayType$$$BY0BAA@D), (sbyte*)(&<Module>.??_C@_04GKHLBAIJ@?4bin?$AA@)) != null || <Module>.strstr((sbyte*)(&$ArrayType$$$BY0BAA@D), (sbyte*)(&<Module>.??_C@_04GHIANNPF@?4BIN?$AA@)) != null) && *(int*)(ptr3 + 10 / sizeof(_rootdirrecord)) < 4096)
							{
								sbyte* ptr4 = <Module>.strchr((sbyte*)(&$ArrayType$$$BY0BAA@D), 59);
								if (ptr4 != null)
								{
									*(byte*)ptr4 = 0;
								}
								this.textBox5.Text = new string((sbyte*)(&$ArrayType$$$BY0BAA@D));
								this.textBox6.Text = new string((sbyte*)(&$ArrayType$$$BY0BAA@D));
								flag = true;
							}
							ptr2 += (IntPtr)(*(byte*)ptr3) / 1;
						}
						if (!flag)
						{
							MessageBox.Show("Can't find Game Info File", "Error", MessageBoxButtons.OK);
						}
						<Module>.fclose(ptr);
					}
				}
			}
		}
		private unsafe void button3_Click(object sender, EventArgs e)
		{
			IntPtr hglobal = Marshal.StringToHGlobalAnsi(this.textBox1.Text);
			_iobuf* ptr;
			<Module>.fopen_s(&ptr, (sbyte*)hglobal.ToPointer(), (sbyte*)(&<Module>.??_C@_02JDPG@rb?$AA@));
			if (ptr == null)
			{
				MessageBox.Show("Can't open ISO image", "Error", MessageBoxButtons.OK);
			}
			else
			{
				Marshal.FreeHGlobal(hglobal);
				hglobal = Marshal.StringToHGlobalAnsi(this.textBox4.Text);
				_iobuf* ptr2;
				<Module>.fopen_s(&ptr2, (sbyte*)hglobal.ToPointer(), (sbyte*)(&<Module>.??_C@_03ELIABIOC@w?$CLb?$AA@));
				if (ptr2 == null)
				{
					<Module>.fclose(ptr);
					MessageBox.Show("Can't open destination file", "Error", MessageBoxButtons.OK);
				}
				else
				{
					Marshal.FreeHGlobal(hglobal);
					this.start = 47104u;
					this.csz = 0u;
					int num = -1;
					$ArrayType$$$BY0BAAAA@E $ArrayType$$$BY0BAAAA@E;
					<Module>.fread((void*)(&$ArrayType$$$BY0BAAAA@E), 32u, 2048u, ptr);
					_iso_primary_record iso_primary_record;
					<Module>.memcpy((void*)(&iso_primary_record), ref $ArrayType$$$BY0BAAAA@E + 32768, 2048u);
					_rootdirrecord rootdirrecord;
					<Module>.memcpy((void*)(&rootdirrecord), ref iso_primary_record + 156, 33u);
					int num2 = *(ref rootdirrecord + 2) - 45000;
					this.progressBar1.Maximum = (int)this.sz;
					this.progressBar1.Minimum = 0;
					this.progressBar1.Value = 0;
					byte* ptr3 = ref $ArrayType$$$BY0BAAAA@E + num2 * 2048;
					while (true)
					{
						_rootdirrecord* ptr4 = (_rootdirrecord*)ptr3;
						if (!(*(bool*)ptr4))
						{
							break;
						}
						if (*(int*)(ptr4 + 2 / sizeof(_rootdirrecord)) < 45056)
						{
							ptr3 += (IntPtr)(*(byte*)ptr4) / 1;
						}
						else
						{
							$ArrayType$$$BY0BAA@D $ArrayType$$$BY0BAA@D;
							<Module>.memcpy((void*)(&$ArrayType$$$BY0BAA@D), (void*)(ptr3 + 33 / 1), (uint)(*(byte*)(ptr4 + 32 / sizeof(_rootdirrecord))));
							*(ref $ArrayType$$$BY0BAA@D + *(byte*)(ptr4 + 32 / sizeof(_rootdirrecord))) = 0;
							sbyte* ptr5 = <Module>.strchr((sbyte*)(&$ArrayType$$$BY0BAA@D), 59);
							if (ptr5 != null)
							{
								*(byte*)ptr5 = 0;
							}
							<Module>.printf((sbyte*)(&<Module>.??_C@_03IKGEINEE@?$CFs?5?$AA@), ref $ArrayType$$$BY0BAA@D);
							<Module>.printf((sbyte*)(&<Module>.??_C@_04EPBFEBBF@?$CFX?9?$DO?$AA@), *(int*)(ptr4 + 2 / sizeof(_rootdirrecord)));
							if (*(int*)(ptr4 + 2 / sizeof(_rootdirrecord)) > 45056)
							{
								if (*(int*)(ptr4 + 10 / sizeof(_rootdirrecord)) > 1048576)
								{
									this.relocatebigfile(ptr, ptr2, ptr4);
								}
								else
								{
									this.relocatefile(ptr, ptr2, ptr4);
								}
								*(int*)(ptr4 + 6 / sizeof(_rootdirrecord)) = (int)this.bswap32(*(uint*)(ptr4 + 2 / sizeof(_rootdirrecord)));
								<Module>.printf((sbyte*)(&<Module>.??_C@_03NBBHOIGN@?$CFX?6?$AA@), *(int*)(ptr4 + 2 / sizeof(_rootdirrecord)));
							}
							else
							{
								<Module>.printf((sbyte*)(&<Module>.??_C@_08IKLPECHA@Skipped?6?$AA@));
							}
							if ((<Module>.strstr((sbyte*)(&$ArrayType$$$BY0BAA@D), (sbyte*)(&<Module>.??_C@_04GKHLBAIJ@?4bin?$AA@)) != null || <Module>.strstr((sbyte*)(&$ArrayType$$$BY0BAA@D), (sbyte*)(&<Module>.??_C@_04GHIANNPF@?4BIN?$AA@)) != null) && *(int*)(ptr4 + 10 / sizeof(_rootdirrecord)) < 4096)
							{
								num = *(int*)(ptr4 + 2 / sizeof(_rootdirrecord));
								if (this.textBox6.Text != "")
								{
									hglobal = Marshal.StringToHGlobalAnsi(this.textBox6.Text);
									<Module>.memcpy((void*)(ptr3 + 33 / 1), (void*)hglobal.ToPointer(), <Module>.strlen((sbyte*)hglobal.ToPointer()) - 1);
									Marshal.FreeHGlobal(hglobal);
								}
							}
							ptr3 += (IntPtr)(*(byte*)ptr4) / 1;
						}
					}
					<Module>.fseek(ptr2, 92160000, 0);
					<Module>.fwrite((void*)(&$ArrayType$$$BY0BAAAA@E), 32u, 2048u, ptr2);
					<Module>.fseek(ptr2, 92467200, 0);
					<Module>.fwrite((void*)(&$ArrayType$$$BY0BAAAA@E), 32u, 2048u, ptr2);
					if (num != -1)
					{
						int num3 = (int)this.crc;
						<Module>.fseek(ptr2, num * 2048, 0);
						$ArrayType$$$BY0IAA@E $ArrayType$$$BY0IAA@E;
						<Module>.fread((void*)(&$ArrayType$$$BY0IAA@E), 2048u, 1u, ptr2);
						<Module>.memcpy(ref $ArrayType$$$BY0IAA@E + 12, (void*)(&num3), 4u);
						<Module>.fseek(ptr2, num * 2048, 0);
						<Module>.fwrite((void*)(&$ArrayType$$$BY0IAA@E), 2048u, 1u, ptr2);
					}
					<Module>.fclose(ptr);
					<Module>.fclose(ptr2);
					MessageBox.Show("Done", "Done", MessageBoxButtons.OK);
				}
			}
		}
		private uint bswap32(uint v)
		{
			return v << 24 | (v & 16711680u) >> 8 | (v & 65280u) << 8 | v >> 24;
		}
		private unsafe void relocatefile(_iobuf* f, _iobuf* f2, _rootdirrecord* rec)
		{
			int num = *(int*)(rec + 10 / sizeof(_rootdirrecord));
			<Module>.fseek(f, (*(int*)(rec + 2 / sizeof(_rootdirrecord)) - 45150 + 150) * 2048, 0);
			*(int*)(rec + 2 / sizeof(_rootdirrecord)) = (int)(*(uint*)(rec + 2 / sizeof(_rootdirrecord)) - this.offset);
			<Module>.fseek(f2, *(int*)(rec + 2 / sizeof(_rootdirrecord)) * 2048, 0);
			while (num != 0)
			{
				int num2 = 2048;
				if (num < 2048)
				{
					num2 = num;
				}
				$ArrayType$$$BY0IAA@E $ArrayType$$$BY0IAA@E;
				<Module>.fread((void*)(&$ArrayType$$$BY0IAA@E), (uint)num2, 1u, f);
				<Module>.fwrite((void*)(&$ArrayType$$$BY0IAA@E), (uint)num2, 1u, f2);
				this.start += 1u;
				this.csz += 2048u;
				this.progressBar1.Value = (int)this.csz;
				if (num > 2048)
				{
					num -= 2048;
				}
				else
				{
					num = 0;
				}
			}
		}
		private unsafe void byterev(byte* p1, byte* p2)
		{
			for (int i = 0; i < 8; i++)
			{
				p2[(IntPtr)i / 1] = *(p1 + (IntPtr)(7 - i) / 1);
			}
		}
		private unsafe void relocatebigfile(_iobuf* f, _iobuf* f2, _rootdirrecord* rec)
		{
			int num = *(int*)(rec + 10 / sizeof(_rootdirrecord));
			<Module>.fseek(f, (*(int*)(rec + 2 / sizeof(_rootdirrecord)) - 45150 + 150) * 2048, 0);
			*(int*)(rec + 2 / sizeof(_rootdirrecord)) = (int)(*(uint*)(rec + 2 / sizeof(_rootdirrecord)) - this.offset);
			<Module>.fseek(f2, *(int*)(rec + 2 / sizeof(_rootdirrecord)) * 2048, 0);
			this.crc = 4294967295u;
			bool flag = false;
			_des_ctx des_ctx;
			_des_ctx des_ctx2;
			if (this.textBox2.Text != "" && this.textBox3.Text != "")
			{
				IntPtr hglobal = 0;
				hglobal = Marshal.StringToHGlobalAnsi(this.textBox2.Text);
				sbyte* ptr = (sbyte*)hglobal.ToPointer();
				$ArrayType$$$BY07E $ArrayType$$$BY07E;
				for (int i = 0; i < 8; i++)
				{
					$ArrayType$$$BY02D $ArrayType$$$BY02D = *(sbyte*)(ptr + (IntPtr)(i * 2) / sizeof(sbyte));
					*(ref $ArrayType$$$BY02D + 1) = (byte)(*(sbyte*)(ptr + (IntPtr)(i * 2 + 1) / sizeof(sbyte)));
					*(ref $ArrayType$$$BY02D + 2) = 0;
					uint num2;
					<Module>.sscanf_s((sbyte*)(&$ArrayType$$$BY02D), (sbyte*)(&<Module>.??_C@_02EMFKHFLK@?$CFX?$AA@), ref num2);
					*(ref $ArrayType$$$BY07E + i) = (byte)(num2 & 255u);
				}
				Marshal.FreeHGlobal(hglobal);
				$ArrayType$$$BY07E $ArrayType$$$BY07E2;
				this.byterev((byte*)(&$ArrayType$$$BY07E), (byte*)(&$ArrayType$$$BY07E2));
				<Module>.des_setkey(&des_ctx, (byte*)(&$ArrayType$$$BY07E2));
				hglobal = Marshal.StringToHGlobalAnsi(this.textBox3.Text);
				ptr = (sbyte*)hglobal.ToPointer();
				for (int i = 0; i < 8; i++)
				{
					$ArrayType$$$BY02D $ArrayType$$$BY02D2 = *(sbyte*)(ptr + (IntPtr)(i * 2) / sizeof(sbyte));
					*(ref $ArrayType$$$BY02D2 + 1) = (byte)(*(sbyte*)(ptr + (IntPtr)(i * 2 + 1) / sizeof(sbyte)));
					*(ref $ArrayType$$$BY02D2 + 2) = 0;
					uint num3;
					<Module>.sscanf_s((sbyte*)(&$ArrayType$$$BY02D2), (sbyte*)(&<Module>.??_C@_02EMFKHFLK@?$CFX?$AA@), ref num3);
					*(ref $ArrayType$$$BY07E + i) = (byte)(num3 & 255u);
				}
				Marshal.FreeHGlobal(hglobal);
				this.byterev((byte*)(&$ArrayType$$$BY07E), (byte*)(&$ArrayType$$$BY07E2));
				<Module>.des_setkey(&des_ctx2, (byte*)(&$ArrayType$$$BY07E2));
				flag = true;
			}
			while (num != 0)
			{
				int num4;
				if (num < 2048)
				{
					num4 = num;
				}
				else
				{
					num4 = 2048;
				}
				$ArrayType$$$BY0IAA@E $ArrayType$$$BY0IAA@E;
				<Module>.fread((void*)(&$ArrayType$$$BY0IAA@E), (uint)num4, 1u, f);
				if (flag)
				{
					for (int j = 0; j < num4; j += 8)
					{
						$ArrayType$$$BY07E $ArrayType$$$BY07E3;
						this.byterev(ref $ArrayType$$$BY0IAA@E + j, (byte*)(&$ArrayType$$$BY07E3));
						$ArrayType$$$BY07E $ArrayType$$$BY07E4;
						<Module>.des_ecb_crypt(&des_ctx, (byte*)(&$ArrayType$$$BY07E3), (byte*)(&$ArrayType$$$BY07E4), 1);
						<Module>.des_ecb_crypt(&des_ctx2, (byte*)(&$ArrayType$$$BY07E4), (byte*)(&$ArrayType$$$BY07E3), 0);
						this.byterev((byte*)(&$ArrayType$$$BY07E3), ref $ArrayType$$$BY0IAA@E + j);
					}
				}
				this.crc = <Module>.crc32((byte*)(&$ArrayType$$$BY0IAA@E), (uint)num4, this.crc);
				<Module>.fwrite((void*)(&$ArrayType$$$BY0IAA@E), (uint)num4, 1u, f2);
				this.start += 1u;
				this.csz += (uint)num4;
				this.progressBar1.Value = (int)this.csz;
				if (num > 2048)
				{
					num -= 2048;
				}
				else
				{
					num = 0;
				}
			}
		}
		protected override void Dispose([MarshalAs(UnmanagedType.U1)] bool flag)
		{
			if (flag)
			{
				try
				{
					this.~Form1();
					return;
				}
				finally
				{
					base.Dispose(true);
				}
			}
			base.Dispose(false);
		}
	}
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
[StructLayout(LayoutKind.Sequential, Size = 33)]
internal struct _rootdirrecord
{
}
[DebugInfoInPDB, MiscellaneousBits(65), NativeCppClass, UnsafeValueType]
[StructLayout(LayoutKind.Sequential, Size = 2048)]
internal struct _iso_primary_record
{
}
